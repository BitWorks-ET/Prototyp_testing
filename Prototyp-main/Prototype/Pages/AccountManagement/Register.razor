@page "/Register"

@using BCrypt.Net
@using Blazored.SessionStorage
@using Prototype.HelperClasses
@using Prototype.Models
@inject NavigationManager Navigation
@inject ISessionStorageService SessionStorage


<PageTitle>Registrierung</PageTitle>
<h3>Registrieren</h3>
<p>Hier können Sie einen neune Account erstellen, indem Sie die relevanten Informationen eingeben.</p>

<label for="userName">Vorname:</label>
<InputText @bind-Value="firstname" placeholder="Max" class="form-control" />

<label for="userName">Nachname:</label>
<InputText @bind-Value="lastname" placeholder="Mustermann" class="form-control" />

<label for="eMail">E-Mail Adresse:</label>
<InputText id="eMail" @bind-Value="eMail" placeholder="Somebody@greatcompany.de" class="form-control" />

<label for="birthday">Geburtsdatum:</label>
<InputDate id="birthday" @bind-Value="birthday" class="form-control" />

<label for="password">Passwort:</label>
<InputText id="password" type="password" @bind-Value="password" class="form-control" />

<label for="repeatPassword">Passwort wiederholen:</label>
<InputText id="repeatPassword" type="password" @bind-Value="repeatedPassword" class="form-control" />

<button @onclick="tryToRegister">Registrieren</button>

@if (popupVisible)
{
	<div class="popup-overlay bg-danger bg-opacity-10">
		<div class="popup-box">
			<p>@popupMessage</p>
			<button @onclick="() => popupVisible = false">Schließen</button>
		</div>
	</div>
}



@code {
	private string? firstname;
	private string? lastname;
	private Gender? gender; //Dropdown hinzufügen
	private DateTime? birthday;

	private string? eMail;
	private string? password;
	private string? repeatedPassword;

	private bool popupVisible = false;
	private String popupMessage = ""; 


	private async Task tryToRegister()
	{
		if (validateData())
		{
			createAccount();
			await LoginHelper.LogInUser(eMail, password, SessionStorage);

			Navigation.NavigateTo("/");
		}
		else
		{
			popupVisible = true;
		}
	}


	private void createAccount()
	{
		Person newPerson = new Person();

		newPerson.FirstName = firstname;
		newPerson.LastName = lastname;
		newPerson.Birthday = birthday; // WTF???
		newPerson.Gender = gender;

		newPerson.eMail = eMail;
		newPerson.PasswordHash = BCrypt.HashPassword(password);


		Application.Instance.AddMember(newPerson);
	}


	private bool validateData()
	{
		if (firstname == null)
		{
			popupMessage = "Bitte geben Sie einen Vornamen ein.";
			return false;
		}

		if (lastname == null)
		{
			popupMessage = "Bitte geben Sie einen Nachnamen ein.";
			return false;
		}

	    if (eMail == null)
	    {
			popupMessage = "Bitte geben Sie eine E-Mail Addresse ein.";
		    return false;
	    }

	    if (password == null)
	    {
			popupMessage = "Bitte geben Sie Ein Password ein.";
		    return false;
	    }

	    if (repeatedPassword == null)
	    {
			popupMessage = "Bitte wiederhohlen Sie ihr Passwort.";
		    return false;
	    }

	    if (password != repeatedPassword)
	    {
		    popupMessage = "Die Passwörter stimmen nicht überein";
		    return false;
	    }

	    return true;
    }
}
